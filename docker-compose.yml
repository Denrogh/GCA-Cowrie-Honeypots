version: "3"

services:
  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      - kafka
      - logstash
    volumes:
      - ./config.env:/usr/share/config/config.env
      - ./cmd/kafka-producer/test.json:/app/test.json
    networks:
      - my-network
    restart: on-failure:10
    env_file:
      - ./config.env

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    hostname: zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "gca-intern-honeypot-topic:1:1"
    restart: on-failure:10
    networks:
      - my-network

  logstash:
    build:
      context: .
      dockerfile: Dockerfile.logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash:/usr/share/logstash/pipeline/
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/gca-proxypot.json:/usr/share/logstash/config/gca-proxypot.json
    ports:
      - "5044:5044"
    networks:
      - my-network
    command: logstash -f /usr/share/logstash/pipeline/logstash.conf

    env_file:
      - ./config.env

networks:
  my-network:
